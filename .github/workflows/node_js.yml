name: Code Review (Bun)

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  Formatting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bun-version: [latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Check formatting
        run: |
          if bun run format:check; then
            echo "âœ… Code formatting is correct"
          else
            echo "::warning::Code formatting issues found. Run 'bun run format' to fix them."
            echo "ðŸ”¶ Formatting check completed with warnings"
          fi

  Eslint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bun-version: [latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Run Eslint
        run: |
          if bun run lint; then
            echo "âœ… Linting passed"
          else
            echo "::warning::ESLint found issues. Please review and fix them."
            echo "ðŸ”¶ Linting completed with warnings"
          fi

  SvelteKit:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    strategy:
      matrix:
        bun-version: [latest]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}
      - name: Install dependencies
        run: bun install --frozen-lockfile
      - name: Check SvelteKit codebase
        run: bun run check
